on: [push, pull_request]

jobs:

  test:

    name: ${{ matrix.library }} ${{ matrix.lisp }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        lisp: [sbcl, ccl]
        library: [numericals, dense-numericals]
        os: [ubuntu-22.04]

    steps:

    - uses: actions/checkout@v2

    - name: Update $PATH
      run: |
        echo $PATH
        echo "PATH=$HOME/bin:$PATH" >> $GITHUB_ENV
    - name: Check $PATH
      run: echo $PATH

    - name: Download implementation
      env:
        LISP: ${{ matrix.lisp }}
        OS: ${{ matrix.os }}
      run: |
        pwd
        ls -l
        bash <(curl -s https://raw.githubusercontent.com/digikar99/lisp-travis-lite/master/run.sh)

    - name: Download blas
      run: |
        sudo apt install libopenblas-base
        dpkg -L libopenblas-base

    - name: Download download-dependencies
      run: |
        git clone https://github.com/digikar99/download-dependencies $HOME/quicklisp/local-projects/download-dependencies

    - name: Download dependencies
      env:
        LIBRARY: ${{ matrix.library }}
      run: >
        cl --eval '(ql:quickload "download-dependencies")' \
           --eval '(in-package :download-dependencies)' \
           --eval '(push #P"./" ql:*local-project-directories*)' \
           --eval '(let ((*dependencies-home* (second ql:*local-project-directories*))) (ensure-system "'$LIBRARY'"))'
        ls $HOME/quicklisp/local-projects/

    - name: Compile Tests
      env:
        LIBRARY: ${{ matrix.library }}
      run: |
        cl --eval '(progn
                     (push #P"./" ql:*local-project-directories*)
                     (push :travis *features*)
                     (print ql:*local-project-directories*)
                     (print (ql:where-is-system "'$LIBRARY'"))
                     (ql:quickload "'$LIBRARY'" :verbose t)
                     (uiop:quit 0))'

    - name: Load magicl
      env:
        LIBRARY: ${{ matrix.library }}
      run: |
        cl --eval '(progn
                     (push #P"./" ql:*local-project-directories*)
                     (print ql:*local-project-directories*)
                     (print (ql:where-is-system "'$LIBRARY'/magicl"))
                     (ql:quickload "'$LIBRARY'/magicl" :verbose t)
                     (eval
                       (read-from-string
                        "(PRINT
                           (MULTIPLE-VALUE-LIST
                             ('$LIBRARY'.MAGICL:SVD
                               ('$LIBRARY':RAND 3 3 :TYPE (QUOTE CL:SINGLE-FLOAT)))))"))
                     (uiop:quit 0))'



    # Testing it on the second load confirms that functionalities do not
    # solely eval-when compile-toplevel, and that they persist across multiple loads.

    - name: Run Tests
      env:
        LIBRARY: ${{ matrix.library }}
      run: |
        cl --eval '(progn
                     (push #P"./" ql:*local-project-directories*)
                     (push :travis *features*)
                     (time (ql:quickload "'$LIBRARY'"))
                     (eval (read-from-string "(SETQ LPARALLEL:*KERNEL* (LPARALLEL:MAKE-KERNEL 2))"))
                     (asdf:test-system "'$LIBRARY'")
                     (uiop:quit 0))'
